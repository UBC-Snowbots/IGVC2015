////////////////////////////////////////////////////////////////////////////////////
///
///  \file GlobalPoseSensorPanel.h
///  \brief Panel for collecting and displaying pose data from a JAUS vehicle.
///
///  <br>Author(s): David Adams
///  <br>Created: 2013
///  <br>Copyright (c) 2013
///  <br>Applied Cognition and Training in Immersive Virtual Environments
///  <br>(ACTIVE) Laboratory
///  <br>Institute for Simulation and Training (IST)
///  <br>University of Central Florida (UCF)
///  <br>All rights reserved.
///  <br>Email: dadams@ist.ucf.edu
///  <br>Web:  http://active.ist.ucf.edu
///
///  Redistribution and use in source and binary forms, with or without
///  modification, are permitted provided that the following conditions are met:
///      * Redistributions of source code must retain the above copyright
///        notice, this list of conditions and the following disclaimer.
///      * Redistributions in binary form must reproduce the above copyright
///        notice, this list of conditions and the following disclaimer in the
///        documentation and/or other materials provided with the distribution.
///      * Neither the name of the ACTIVE LAB, IST, UCF, nor the
///        names of its contributors may be used to endorse or promote products
///        derived from this software without specific prior written permission.
/// 
///  THIS SOFTWARE IS PROVIDED BY THE ACTIVE LAB''AS IS'' AND ANY
///  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
///  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
///  DISCLAIMED. IN NO EVENT SHALL UCF BE LIABLE FOR ANY
///  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
///  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
///  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
///  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
///  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
///  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///
////////////////////////////////////////////////////////////////////////////////////
#ifndef __GlobalPoseSensorPanel__
#define __GlobalPoseSensorPanel__

/**
@file
Subclass of GlobalPoseSensorPanelBase, which is generated by wxFormBuilder.
*/

#include "NodeManagerGUI.h"
#include "jaus/core/Component.h"
#include <jaus/mobility/sensors/GlobalPoseSensor.h>
#include <jaus/mobility/sensors/LocalPoseSensor.h>
#include "MonitorPanel.h"
#include "ImagePanel.h"
#include <boost/circular_buffer.hpp>

//// end generated include


////////////////////////////////////////////////////////////////////////////////
///
///   \class GlobalPoseSensorPanel
///   \brief Class which subscribes to local and global pose data, displays
///          a grid for visualization of vehicle position and orientation.
///
////////////////////////////////////////////////////////////////////////////////
class GlobalPoseSensorPanel : public GlobalPoseSensorPanelBase,
                              public MonitorPanel,
                              public JAUS::Transport::Callback
{
    public:
        /** Constructor */
        GlobalPoseSensorPanel(JAUS::Component* jausComponent, wxWindow* parent );
        virtual void AddServices(JAUS::Component* jausComponent){}
    protected:
        // Handlers for GlobalPoseSensorPanelBase events.
        void OnSetFocus( wxFocusEvent& event );
        void OnUpdateUI( wxUpdateUIEvent& event );
        void OnRefreshList( wxCommandEvent& event );
        void OnConnect( wxCommandEvent& event );
        void OnZoomScroll( wxScrollEvent& event );
        virtual void RefreshPanel() {  }
        virtual void OnNewImage( wxCommandEvent& event);
        virtual void OnShutdown();
        virtual void ProcessMessage(const JAUS::Message* message);

        wxMutex mImageMutex;              ///<  Image mutex.
        wxMutex mDataMutex;               ///<  Mutex for thread protection of data.
        wxBitmap mLocalPoseImage;         ///<  Local Pose image.
        wxImagePanel* mpImagePanel;       ///<  Image panel.

        JAUS::ReportLocalPose *mpReportLocalPose;           ///<  Latest recieved local pose data.
        JAUS::ReportGlobalPose *mpReportGlobalPose;         ///<  Latest recieved global pose data.
        CxUtils::Time mLastPoseTime;                        ///<  Last time local pose data was recieved.
        JAUS::Address mGPSToMonitorAddress;                 ///<  User selected address to monitor pose data.
        bool mConnectFlag;                                  ///<  Flag for if we have subscribed to pose data.
        std::map<JAUS::UShort, boost::circular_buffer<JAUS::ReportLocalPose> > mPoseHistory;        ///<  History of local pose data.
        std::map<JAUS::UShort, boost::circular_buffer<JAUS::ReportGlobalPose> > mGlobalPoseHistory; ///<  History of global pose data.

	
};

#endif // __GlobalPoseSensorPanel__
